Description: >
  John Baek / Udagram
  This template deploys a VPC, with a pair of public and private subnets spread
  across two AZs. It deploys an Interbet Gateway, with a default
  route on the public subnets. It deploys a pair of NAT Gateways (one in each AZ),
  and default routes for them in the private subnets.

# whatever you consider a changing value, put it as a parameter instead of hard-coding it into your script
Parameters:
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VpcCIDR:
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.0.0.0/16

    # PublicSubnet1CIDR:
    #     Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    #     Type: String
    #     Default: 10.0.0.0/24
    #

Resources:
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags: # Why Tag?
                - Key: Name
                  Value: !Ref EnvironmentName

    # To enable VPC and IGW, you need an IGW Attachment
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC #Refer other Resource.

    VPC:
        Type: AWS::EC2::VPC
        Properties:
        CidrBlock: !Ref VpcCIDR
        EnableDnsHostnames: true
        Tags:
          - Key: name
            Value: !Ref EnvironmentName

  # Type: AWS::S3::Bucket
  # Properties:
  #   Tags: ===> No config?

  # VPC
  # AZ x 2
  # Load Balancer
  # 2 public subnets
  # 2 private subnets
  # 4 abb servers
  # 2 NAT Gateways



  #instace profile contains the IAM Role name(s) that we want to associate to our auto scaling EC2 Servers
  ProfileWithRolesForOurApp:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - UdacityS3ReadOnlyEC2

          #!/bin/bash
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          cd /var/www/html
          aws s3 cp s3://udacity-demo-1/udacity.zip .
          unzip -o udacity.zip
  Outputs:
  #Bonus points for useful outputs!
